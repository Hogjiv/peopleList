{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\nimport axios from \"axios\";\nconst store = createStore({\n  state() {\n    return {\n      users: [],\n      editNote: null,\n      editMode: {},\n      deleteNote: []\n    };\n  },\n  mutations: {\n    deleteNote(state, personId) {\n      state.users = state.users.filter(user => user.id !== personId);\n      console.log('Note deleted:', personId);\n    },\n    addUser(state, payload) {\n      state.users.push(payload);\n      console.log(\"User added:\", payload);\n    },\n    loadUsers(state, payload) {\n      state.users = payload;\n      console.log(\"Users loaded:\", payload);\n    },\n    setEditNote(state, noteId) {\n      state.editNote = noteId;\n      console.log(\"Note editing started:\", noteId);\n    }\n  },\n  actions: {\n    addNewUser({\n      commit\n    }, payload) {\n      console.log(\"Adding user:\", payload);\n      commit(\"addUser\", payload);\n    },\n    async loadUsersFromList({\n      commit\n    }) {\n      try {\n        const response = await axios.get(\"../list\");\n        const users = response.data.people;\n        commit(\"loadUsers\", users);\n      } catch (error) {\n        console.error(\"Failed to load users:\", error);\n      }\n    },\n    editNote({\n      commit\n    }, noteId) {\n      commit(\"setEditNote\", noteId);\n    },\n    deleteNote({\n      commit\n    }, id) {\n      commit(\"deleteNote\", id);\n      console.log('elete receieved');\n    }\n  },\n  getters: {\n    getUsers: state => state.users\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","users","editNote","editMode","deleteNote","mutations","personId","filter","user","id","console","log","addUser","payload","push","loadUsers","setEditNote","noteId","actions","addNewUser","commit","loadUsersFromList","response","get","data","people","error","getters","getUsers"],"sources":["D:/Ira/Program/list/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nconst store = createStore({\r\n  state() {\r\n    return {\r\n      users: [],\r\n      editNote: null,\r\n      editMode: {},\r\n      deleteNote: []\r\n    };\r\n  },\r\n  mutations: {\r\n    deleteNote(state, personId) {\r\n      state.users = state.users.filter(user => user.id !== personId);\r\n      console.log('Note deleted:', personId);\r\n    },\r\n    addUser(state, payload) {\r\n      state.users.push(payload);\r\n      console.log(\"User added:\", payload);\r\n    },\r\n    loadUsers(state, payload) {\r\n      state.users = payload;\r\n      console.log(\"Users loaded:\", payload);\r\n    },\r\n    setEditNote(state, noteId) {\r\n      state.editNote = noteId;\r\n      console.log(\"Note editing started:\", noteId);\r\n    },\r\n  },\r\n  actions: {\r\n    addNewUser({ commit }, payload) {\r\n      console.log(\"Adding user:\", payload);\r\n      commit(\"addUser\", payload);\r\n    },\r\n    async loadUsersFromList({ commit }) {\r\n      try {\r\n        const response = await axios.get(\"../list\");\r\n        const users = response.data.people;\r\n        commit(\"loadUsers\", users);\r\n      } catch (error) {\r\n        console.error(\"Failed to load users:\", error);\r\n      }\r\n    },\r\n    editNote({ commit }, noteId) {\r\n      commit(\"setEditNote\", noteId);\r\n    },\r\n    deleteNote({ commit }, id) {\r\n      commit(\"deleteNote\", id);\r\n      console.log('elete receieved')\r\n    }\r\n  },\r\n  getters: {\r\n    getUsers: state => state.users\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,CAAC,CAAC;MACZC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACTD,UAAUA,CAACJ,KAAK,EAAEM,QAAQ,EAAE;MAC1BN,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,QAAQ,CAAC;MAC9DI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAAC;IACxC,CAAC;IACDM,OAAOA,CAACZ,KAAK,EAAEa,OAAO,EAAE;MACtBb,KAAK,CAACC,KAAK,CAACa,IAAI,CAACD,OAAO,CAAC;MACzBH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEE,OAAO,CAAC;IACrC,CAAC;IACDE,SAASA,CAACf,KAAK,EAAEa,OAAO,EAAE;MACxBb,KAAK,CAACC,KAAK,GAAGY,OAAO;MACrBH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,OAAO,CAAC;IACvC,CAAC;IACDG,WAAWA,CAAChB,KAAK,EAAEiB,MAAM,EAAE;MACzBjB,KAAK,CAACE,QAAQ,GAAGe,MAAM;MACvBP,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEM,MAAM,CAAC;IAC9C;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAEP,OAAO,EAAE;MAC9BH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEE,OAAO,CAAC;MACpCO,MAAM,CAAC,SAAS,EAAEP,OAAO,CAAC;IAC5B,CAAC;IACD,MAAMQ,iBAAiBA,CAAC;MAAED;IAAO,CAAC,EAAE;MAClC,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,SAAS,CAAC;QAC3C,MAAMtB,KAAK,GAAGqB,QAAQ,CAACE,IAAI,CAACC,MAAM;QAClCL,MAAM,CAAC,WAAW,EAAEnB,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACdhB,OAAO,CAACgB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDxB,QAAQA,CAAC;MAAEkB;IAAO,CAAC,EAAEH,MAAM,EAAE;MAC3BG,MAAM,CAAC,aAAa,EAAEH,MAAM,CAAC;IAC/B,CAAC;IACDb,UAAUA,CAAC;MAAEgB;IAAO,CAAC,EAAEX,EAAE,EAAE;MACzBW,MAAM,CAAC,YAAY,EAAEX,EAAE,CAAC;MACxBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC;EACF,CAAC;EACDgB,OAAO,EAAE;IACPC,QAAQ,EAAE5B,KAAK,IAAIA,KAAK,CAACC;EAC3B;AACF,CAAC,CAAC;AAEF,eAAeF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}