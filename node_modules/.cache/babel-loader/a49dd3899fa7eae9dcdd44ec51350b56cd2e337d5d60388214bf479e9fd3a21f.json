{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Family Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Experience\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Age\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Address\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createCommentVNode(\"   \\r\\n  <tbody col-6>\\r\\n    <tr v-for=\\\"(person, index) in peopleList\\\" :key=\\\"person.id\\\">\\r\\n      <th scope=\\\"row \\\">{{ index + 1 }}</th>\\r\\n      <td>{{ person.name }}</td>\\r\\n      <td>{{ person.familyName }}</td>\\r\\n      <td>{{ person.experience }}</td>\\r\\n      <td>{{ person.age }}</td>\\r\\n      <td>{{ person.address }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th scope=\\\"row\\\"></th>\\r\\n      <td>\\r\\n        <input type=\\\"text\\\" class=\\\"input-form\\\" v-model=\\\"newPerson.name\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input type=\\\"text\\\" class=\\\"input-form\\\" v-model=\\\"newPerson.familyName\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input type=\\\"text\\\" class=\\\"input-form\\\" v-model=\\\"newPerson.experience\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input type=\\\"text\\\" class=\\\"input-form\\\" v-model=\\\"newPerson.age\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input type=\\\"text\\\" class=\\\"input-form\\\" v-model=\\\"newPerson.address\\\">\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody> \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode"],"sources":["D:\\Ira\\Program\\list\\src\\components\\createList.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newPerson: {\r\n        name: '',\r\n        familyName: '',\r\n        experience: '',\r\n        age: '',\r\n        address: ''\r\n      }\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n <table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Family Name</th>\r\n      <th scope=\"col\">Experience</th>\r\n      <th scope=\"col\">Age</th>\r\n      <th scope=\"col\">Address</th>\r\n    </tr>\r\n  </thead>\r\n<!--   \r\n  <tbody col-6>\r\n    <tr v-for=\"(person, index) in peopleList\" :key=\"person.id\">\r\n      <th scope=\"row \">{{ index + 1 }}</th>\r\n      <td>{{ person.name }}</td>\r\n      <td>{{ person.familyName }}</td>\r\n      <td>{{ person.experience }}</td>\r\n      <td>{{ person.age }}</td>\r\n      <td>{{ person.address }}</td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\"></th>\r\n      <td>\r\n        <input type=\"text\" class=\"input-form\" v-model=\"newPerson.name\">\r\n      </td>\r\n      <td>\r\n        <input type=\"text\" class=\"input-form\" v-model=\"newPerson.familyName\">\r\n      </td>\r\n      <td>\r\n        <input type=\"text\" class=\"input-form\" v-model=\"newPerson.experience\">\r\n      </td>\r\n      <td>\r\n        <input type=\"text\" class=\"input-form\" v-model=\"newPerson.age\">\r\n      </td>\r\n      <td>\r\n        <input type=\"text\" class=\"input-form\" v-model=\"newPerson.address\">\r\n      </td>\r\n    </tr>\r\n  </tbody> -->\r\n</table>\r\n</template>\r\n<style>\r\n.input-form {\r\n  border: none;\r\n  border-bottom: 1px solid #000;\r\n  outline: none;\r\n}\r\n</style>"],"mappings":";;EAiBQA,KAAK,EAAC;AAAO;gCACnBC,mBAAA,CASQ,gB,aARNA,mBAAA,CAOK,a,aANHA,mBAAA,CAAsB;EAAlBC,KAAK,EAAC;AAAK,GAAC,GAAC,G,aACjBD,mBAAA,CAAyB;EAArBC,KAAK,EAAC;AAAK,GAAC,MAAI,G,aACpBD,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,G,aAC3BD,mBAAA,CAA+B;EAA3BC,KAAK,EAAC;AAAK,GAAC,YAAU,G,aAC1BD,mBAAA,CAAwB;EAApBC,KAAK,EAAC;AAAK,GAAC,KAAG,G,aACnBD,mBAAA,CAA4B;EAAxBC,KAAK,EAAC;AAAK,GAAC,SAAO,E;;;uBAR5BC,mBAAA,CAwCO,SAxCPC,UAwCO,GAvCNC,UASQ,EACVC,mBAAA,89BA4Bc,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}