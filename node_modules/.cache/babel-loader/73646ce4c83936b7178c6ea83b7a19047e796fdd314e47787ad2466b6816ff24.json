{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_viewList = _resolveComponent(\"viewList\");\n  const _component_createList = _resolveComponent(\"createList\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_viewList), _createVNode(_component_createList, {\n    onAddNewUser: $options.addNewUser\n  }, null, 8 /* PROPS */, [\"onAddNewUser\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_viewList","_component_createList","onAddNewUser","$options","addNewUser"],"sources":["D:\\Ira\\Program\\list\\src\\App.vue"],"sourcesContent":["<script>\nimport { mapState } from 'vuex';\nimport viewList from './components/viewList.vue';\nimport createList from './components/createList.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    viewList,\n    createList\n  },\n  computed: {\n  ...mapState(['users'])\n},\n\nwatch: {\n  users: {\n    immediate: true, // Выполнить наблюдение сразу после монтирования компонента\n    handler() {\n      console.log('7. Users updated');\n    }\n  }\n},\n  methods: {\n    addNewUser(payload) {\n      console.log('3. received in parent', payload);\n      this.$store.dispatch('addNewUser', payload);\n      console.log('4. sent to store');\n    }\n  }\n};\n</script>\n\n<template>\n  <viewList \n />\n  <createList\n  @addNewUser = 'addNewUser'/>\n</template>\n\n\n<style> \n  \n</style>\n"],"mappings":";;;;6DAkCEA,YAAA,CACCC,mBAAA,GACDD,YAAA,CAC4BE,qBAAA;IAA3BC,YAAU,EAAIC,QAAA,CAAAC;EAAU,0C"},"metadata":{},"sourceType":"module","externalDependencies":[]}