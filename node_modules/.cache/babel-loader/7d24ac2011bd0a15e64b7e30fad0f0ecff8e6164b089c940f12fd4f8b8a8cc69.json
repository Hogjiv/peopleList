{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\nimport axios from \"axios\";\nconst store = createStore({\n  state() {\n    return {\n      users: [],\n      editNote: null,\n      editMode: {},\n      deleteNote: []\n    };\n  },\n  mutations: {\n    deleteNote(state, id) {\n      state.users = state.users.filter(user => user.id !== id);\n      localStorage.setItem('users', JSON.stringify(state.users));\n    },\n    addUser(state, payload) {\n      state.users.push(payload);\n      localStorage.setItem('users', JSON.stringify(state.users));\n    },\n    loadUsers(state, payload) {\n      state.users = payload;\n      localStorage.setItem('users', JSON.stringify(state.users));\n    },\n    setEditNote(state, noteId) {\n      state.editNote = noteId;\n      localStorage.setItem('editNote', JSON.stringify(state.editNote));\n    }\n  },\n  actions: {\n    addNewUser({\n      commit\n    }, payload) {\n      console.log(\"Adding user:\", payload);\n      commit(\"addUser\", payload);\n    },\n    async loadUsersFromList({\n      commit\n    }) {\n      try {\n        const response = await axios.get(\"../list\");\n        const users = response.data.people;\n        commit(\"loadUsers\", users);\n      } catch (error) {\n        console.error(\"Failed to load users:\", error);\n      }\n    },\n    editNote({\n      commit\n    }, noteId) {\n      commit(\"setEditNote\", noteId);\n    },\n    deleteNote({\n      commit\n    }, id) {\n      commit(\"deleteNote\", id);\n      console.log('delete receieved');\n    }\n  },\n  getters: {\n    getUsers: state => state.users\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","users","editNote","editMode","deleteNote","mutations","id","filter","user","localStorage","setItem","JSON","stringify","addUser","payload","push","loadUsers","setEditNote","noteId","actions","addNewUser","commit","console","log","loadUsersFromList","response","get","data","people","error","getters","getUsers"],"sources":["D:/Ira/Program/list/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nconst store = createStore({\r\n  state() {\r\n    return {\r\n      users: [],\r\n      editNote: null,\r\n      editMode: {},\r\n      deleteNote: []\r\n    };\r\n  },\r\n  mutations: {\r\n    deleteNote(state, id) {\r\n      state.users = state.users.filter(user => user.id !== id);\r\n      localStorage.setItem('users', JSON.stringify(state.users));\r\n    },\r\n    addUser(state, payload) {\r\n      state.users.push(payload);\r\n      localStorage.setItem('users', JSON.stringify(state.users));\r\n    },\r\n    loadUsers(state, payload) {\r\n      state.users = payload; \r\n      localStorage.setItem('users', JSON.stringify(state.users));\r\n    },\r\n    setEditNote(state, noteId) {\r\n      state.editNote = noteId;\r\n      localStorage.setItem('editNote', JSON.stringify(state.editNote));\r\n    },\r\n  },\r\n  actions: {\r\n    addNewUser({ commit }, payload) {\r\n      console.log(\"Adding user:\", payload);\r\n      commit(\"addUser\", payload);\r\n    },\r\n    async loadUsersFromList({ commit }) {\r\n      try {\r\n        const response = await axios.get(\"../list\");\r\n        const users = response.data.people;\r\n        commit(\"loadUsers\", users);\r\n      } catch (error) {\r\n        console.error(\"Failed to load users:\", error);\r\n      }\r\n    },\r\n    editNote({ commit }, noteId) {\r\n      commit(\"setEditNote\", noteId);\r\n    },\r\n    deleteNote({ commit }, id) {\r\n      commit(\"deleteNote\", id);\r\n      console.log('delete receieved')\r\n    }\r\n  },\r\n  getters: {\r\n    getUsers: state => state.users\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,CAAC,CAAC;MACZC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACTD,UAAUA,CAACJ,KAAK,EAAEM,EAAE,EAAE;MACpBN,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;MACxDG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAACC,KAAK,CAAC,CAAC;IAC5D,CAAC;IACDY,OAAOA,CAACb,KAAK,EAAEc,OAAO,EAAE;MACtBd,KAAK,CAACC,KAAK,CAACc,IAAI,CAACD,OAAO,CAAC;MACzBL,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAACC,KAAK,CAAC,CAAC;IAC5D,CAAC;IACDe,SAASA,CAAChB,KAAK,EAAEc,OAAO,EAAE;MACxBd,KAAK,CAACC,KAAK,GAAGa,OAAO;MACrBL,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAACC,KAAK,CAAC,CAAC;IAC5D,CAAC;IACDgB,WAAWA,CAACjB,KAAK,EAAEkB,MAAM,EAAE;MACzBlB,KAAK,CAACE,QAAQ,GAAGgB,MAAM;MACvBT,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAACE,QAAQ,CAAC,CAAC;IAClE;EACF,CAAC;EACDiB,OAAO,EAAE;IACPC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAEP,OAAO,EAAE;MAC9BQ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,OAAO,CAAC;MACpCO,MAAM,CAAC,SAAS,EAAEP,OAAO,CAAC;IAC5B,CAAC;IACD,MAAMU,iBAAiBA,CAAC;MAAEH;IAAO,CAAC,EAAE;MAClC,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,SAAS,CAAC;QAC3C,MAAMzB,KAAK,GAAGwB,QAAQ,CAACE,IAAI,CAACC,MAAM;QAClCP,MAAM,CAAC,WAAW,EAAEpB,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAO4B,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD3B,QAAQA,CAAC;MAAEmB;IAAO,CAAC,EAAEH,MAAM,EAAE;MAC3BG,MAAM,CAAC,aAAa,EAAEH,MAAM,CAAC;IAC/B,CAAC;IACDd,UAAUA,CAAC;MAAEiB;IAAO,CAAC,EAAEf,EAAE,EAAE;MACzBe,MAAM,CAAC,YAAY,EAAEf,EAAE,CAAC;MACxBgB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,QAAQ,EAAE/B,KAAK,IAAIA,KAAK,CAACC;EAC3B;AACF,CAAC,CAAC;AAEF,eAAeF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}